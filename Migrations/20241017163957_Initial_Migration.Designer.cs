// <auto-generated />
using System;
using BookManagementApp.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BookManagementApp.Migrations
{
    [DbContext(typeof(BookContext))]
    [Migration("20241017163957_Initial_Migration")]
    partial class Initial_Migration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BookManagementApp.Models.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("GenreId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("IsAvailable")
                        .HasColumnType("bit");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("Year")
                        .IsRequired()
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GenreId");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Author = "Edward Kolla",
                            GenreId = "A",
                            IsAvailable = true,
                            Title = "Koala Adventure",
                            Year = 2007
                        },
                        new
                        {
                            Id = 2,
                            Author = "Maria Von Trapp",
                            GenreId = "M",
                            IsAvailable = true,
                            Title = "The Sound of Music",
                            Year = 1950
                        },
                        new
                        {
                            Id = 3,
                            Author = "Kenneth Kolla",
                            GenreId = "N",
                            IsAvailable = false,
                            Title = "Koalas",
                            Year = 2010
                        },
                        new
                        {
                            Id = 4,
                            Author = "Edward Kolla",
                            GenreId = "C",
                            IsAvailable = true,
                            Title = "Koala Comedy",
                            Year = 2014
                        },
                        new
                        {
                            Id = 5,
                            Author = "Edward Kolla",
                            GenreId = "D",
                            IsAvailable = true,
                            Title = "Koala Drama",
                            Year = 2017
                        });
                });

            modelBuilder.Entity("BookManagementApp.Models.Genre", b =>
                {
                    b.Property<string>("GenreId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GenreId");

                    b.ToTable("Genres");

                    b.HasData(
                        new
                        {
                            GenreId = "A",
                            Name = "Action"
                        },
                        new
                        {
                            GenreId = "C",
                            Name = "Comedy"
                        },
                        new
                        {
                            GenreId = "D",
                            Name = "Drama"
                        },
                        new
                        {
                            GenreId = "M",
                            Name = "Musical"
                        },
                        new
                        {
                            GenreId = "N",
                            Name = "Nature"
                        });
                });

            modelBuilder.Entity("BookManagementApp.Models.Book", b =>
                {
                    b.HasOne("BookManagementApp.Models.Genre", "Genre")
                        .WithMany()
                        .HasForeignKey("GenreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Genre");
                });
#pragma warning restore 612, 618
        }
    }
}
